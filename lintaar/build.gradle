apply plugin: 'com.android.library'

android {
    compileSdkVersion 28
    buildToolsVersion '28.0.2'

    lintOptions {
        abortOnError false
    }
    dexOptions {
        jumboMode = true
    }
    defaultConfig {
//        applicationId "com.example.lintaar"
        minSdkVersion 16
        targetSdkVersion 22
        versionCode 1
        versionName "1.0"
    }

    /**
     * 定义方法lintJarImport,引入 XTCLintRules.jar
     *
     * rules for including "lint.jar" in aar
     */
    configurations {
        lintJarImport
    }

// 链接到lintJar中的lintJarOutput方法,调用jar方法，并获得jar包
    dependencies {
        //其引用了模块 “:XTCLintRules”的 Gradle configuration “lintJarOutput”。
        lintJarImport project(path: ':lintrules', configuration: "lintJarOutput")
    }

// 将得到的JAR包复制到目录build/intermediates/lint/下，并且重命名为 lint.jar
    task copyLintJar(type: Copy) {
        from(configurations.lintJarImport) {
            rename {
                String fileName ->
                    'lint.jar'
            }
        }
        into 'build/intermediates/lint/'
    }

// 当项目build到compileLint这一步时执行copyLintJar方法
    project.afterEvaluate {
        def compileLintTask = project.tasks.find { it.name == 'compileLint' }
        //对内置的Gradle task “compileLint”做了修改，让其依赖于我们定义的一个task “copyLintJar”。
        compileLintTask.dependsOn(copyLintJar)
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:appcompat-v7:28.0.0'
}
